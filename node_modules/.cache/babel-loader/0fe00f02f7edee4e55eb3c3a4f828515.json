{"ast":null,"code":"import _classCallCheck from \"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/branded/projects/ipfs/src/components/App.js\";\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css'; // import installed ipfs-http client using below command \n\nvar ipfsClient = require('ipfs-http-client'); // local host if using local ipfs node but we are using infura free gateway\n\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (Event) {\n      //1. prevent defaults 2. captureFile to file constant 3. define readerobject \n      // Prevent default events\n      Event.preventDefault(); // fetch file from event and first file to be saved in file constant.\n\n      var File = Event.target.files[0]; //The FileReader() constructor creates a new FileReader. syntax : new FileReader()\n      //file reader object lets web applns read contents of file stored on user computer.\n\n      var reader = new window.FileReader(); //readAsArrayBuffer() method is used to start reading the contents of a specified Blob or File . \n      //When the read operation is finished, the readyState becomes DONE , and the loadend is triggered. \n      //At that time, the result attribute contains an ArrayBuffer representing the file's data\n\n      reader.readAsArrayBuffer(File); //triggers below function to print buffer word and its conversion results in console window.\n\n      reader.onloadend = function () {\n        // putting file on ipfs is two step process. first upload then submit . \n        //In order to talk these to eachother, we need to use react state object\n        // console.log ('buffer', Buffer(reader.result)) hence we goona put this in state object\n        _this.setState = {\n          buffer: Buffer(reader.result)\n        };\n      };\n    };\n\n    _this.onSubmit = function (Event) {\n      Event.preventDefault();\n      console.log('submitting the form...');\n      ipfs.add(_this.state.buffer, function (error, result) {\n        console.log('Ipfs result', result);\n\n        if (error) {\n          console.error(error);\n          return;\n        } // Step-2 store file on blockchain\n\n      });\n    };\n\n    _this.state = {\n      buffer: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"Meme of the day\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }\n      }, \"Meme of the day \"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"names":["React","Component","logo","ipfsClient","require","ipfs","host","port","protocol","App","props","captureFile","Event","preventDefault","File","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","onSubmit","console","log","add","state","error"],"sources":["/home/branded/projects/ipfs/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css';\n// import installed ipfs-http client using below command \nconst ipfsClient = require('ipfs-http-client')\n// local host if using local ipfs node but we are using infura free gateway\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n\nclass App extends Component {\n\n  constructor (props){\n    super (props);\n    this.state = {\n    buffer : null\n    };\n  }\n  captureFile = (Event) => {\n    //1. prevent defaults 2. captureFile to file constant 3. define readerobject \n    // Prevent default events\n    Event.preventDefault()\n    // fetch file from event and first file to be saved in file constant.\n    const File = Event.target.files[0]\n    //The FileReader() constructor creates a new FileReader. syntax : new FileReader()\n    //file reader object lets web applns read contents of file stored on user computer.\n    const reader = new window.FileReader()\n    //readAsArrayBuffer() method is used to start reading the contents of a specified Blob or File . \n    //When the read operation is finished, the readyState becomes DONE , and the loadend is triggered. \n    //At that time, the result attribute contains an ArrayBuffer representing the file's data\n    reader.readAsArrayBuffer(File)\n    //triggers below function to print buffer word and its conversion results in console window.\n    reader.onloadend = () => {\n    // putting file on ipfs is two step process. first upload then submit . \n    //In order to talk these to eachother, we need to use react state object\n    // console.log ('buffer', Buffer(reader.result)) hence we goona put this in state object\n    this.setState = ({buffer:Buffer(reader.result)})\n    } \n  }\n  // Example hash :\n  // Example url : \n  onSubmit = (Event) => {\n    Event.preventDefault()\n    console.log ('submitting the form...')\n    ipfs.add (this.state.buffer, (error, result) => {\n    console.log('Ipfs result',result)\n    if (error) {\n      console.error (error)\n      return\n    }\n  // Step-2 store file on blockchain\n  })\n}\n\n  render() {\n    return (  \n      <div> \n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Meme of the day \n          </a>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <p>&nbsp;</p> \n                 { \n                 //&nbsp is used to give space // also for commenting in app.js file you need to // inside curly braces\n                }\n               <h2>Meme of the day </h2>\n                 {/* whenever form submitted it triggers onsubmit function then file which is in buffer will be put it on ipfs*/}\n                   <form onSubmit = {this.onSubmit} >\n                 {/* whenever file uploaded  trigger capturefile function which captures file and further converted to buffer*/}\n                   <input type='file' onChange={this.captureFile}/> \n                   <input type='submit' />\n                   </form>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}