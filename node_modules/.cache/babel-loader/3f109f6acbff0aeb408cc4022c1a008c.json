{"ast":null,"code":"'use strict';\n\nvar _asyncGeneratorDelegate = require(\"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncGeneratorDelegate\");\n\nvar _awaitAsyncGenerator = require(\"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/home/branded/projects/ipfs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\nvar errCode = require('err-code');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar globalThis = require('../globalthis');\n/*\n * Transform one of:\n *\n * ```\n * Bytes (Buffer|ArrayBuffer|TypedArray) [single file]\n * Bloby (Blob|File) [single file]\n * String [single file]\n * { path, content: Bytes } [single file]\n * { path, content: Bloby } [single file]\n * { path, content: String } [single file]\n * { path, content: Iterable<Number> } [single file]\n * { path, content: Iterable<Bytes> } [single file]\n * { path, content: AsyncIterable<Bytes> } [single file]\n * Iterable<Number> [single file]\n * Iterable<Bytes> [single file]\n * Iterable<Bloby> [multiple files]\n * Iterable<String> [multiple files]\n * Iterable<{ path, content: Bytes }> [multiple files]\n * Iterable<{ path, content: Bloby }> [multiple files]\n * Iterable<{ path, content: String }> [multiple files]\n * Iterable<{ path, content: Iterable<Number> }> [multiple files]\n * Iterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * Iterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * AsyncIterable<Bytes> [single file]\n * AsyncIterable<Bloby> [multiple files]\n * AsyncIterable<String> [multiple files]\n * AsyncIterable<{ path, content: Bytes }> [multiple files]\n * AsyncIterable<{ path, content: Bloby }> [multiple files]\n * AsyncIterable<{ path, content: String }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Number> }> [multiple files]\n * AsyncIterable<{ path, content: Iterable<Bytes> }> [multiple files]\n * AsyncIterable<{ path, content: AsyncIterable<Bytes> }> [multiple files]\n * ```\n * Into:\n *\n * ```\n * AsyncIterable<{ path, content: AsyncIterable<Buffer> }>\n * ```\n *\n * @param input Object\n * @return AsyncInterable<{ path, content: AsyncIterable<Buffer> }>\n */\n\n\nmodule.exports = function normaliseInput(input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(\"Unexpected input: \".concat(input), 'ERR_UNEXPECTED_INPUT'));\n  } // String\n\n\n  if (typeof input === 'string' || input instanceof String) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return toFileObject(input);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  } // Buffer|ArrayBuffer|TypedArray\n  // Blob|File\n\n\n  if (isBytes(input) || isBloby(input)) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return toFileObject(input);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  } // Iterable<?>\n\n\n  if (input[Symbol.iterator]) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      var iterator, first, _iterator4, _step4, obj;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // eslint-disable-line require-await\n              iterator = input[Symbol.iterator]();\n              first = iterator.next();\n\n              if (!first.done) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", iterator);\n\n            case 4:\n              if (!(Number.isInteger(first.value) || isBytes(first.value))) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 7;\n              return toFileObject( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return first.value;\n\n                      case 2:\n                        return _context3.delegateYield(iterator, \"t0\", 3);\n\n                      case 3:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              })());\n\n            case 7:\n              return _context4.abrupt(\"return\");\n\n            case 8:\n              if (!(isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string')) {\n                _context4.next = 29;\n                break;\n              }\n\n              _context4.next = 11;\n              return toFileObject(first.value);\n\n            case 11:\n              _iterator4 = _createForOfIteratorHelper(iterator);\n              _context4.prev = 12;\n\n              _iterator4.s();\n\n            case 14:\n              if ((_step4 = _iterator4.n()).done) {\n                _context4.next = 20;\n                break;\n              }\n\n              obj = _step4.value;\n              _context4.next = 18;\n              return toFileObject(obj);\n\n            case 18:\n              _context4.next = 14;\n              break;\n\n            case 20:\n              _context4.next = 25;\n              break;\n\n            case 22:\n              _context4.prev = 22;\n              _context4.t0 = _context4[\"catch\"](12);\n\n              _iterator4.e(_context4.t0);\n\n            case 25:\n              _context4.prev = 25;\n\n              _iterator4.f();\n\n              return _context4.finish(25);\n\n            case 28:\n              return _context4.abrupt(\"return\");\n\n            case 29:\n              throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n\n            case 30:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[12, 22, 25, 28]]);\n    }))();\n  } // window.ReadableStream\n\n\n  if (typeof input.getReader === 'function') {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, obj;\n\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context5.prev = 2;\n              _iterator = _asyncIterator(browserStreamToIt(input));\n\n            case 4:\n              _context5.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n                _context5.next = 13;\n                break;\n              }\n\n              obj = _step.value;\n              _context5.next = 10;\n              return toFileObject(obj);\n\n            case 10:\n              _iteratorAbruptCompletion = false;\n              _context5.next = 4;\n              break;\n\n            case 13:\n              _context5.next = 19;\n              break;\n\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.prev = 20;\n\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context5.next = 24;\n                break;\n              }\n\n              _context5.next = 24;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 24:\n              _context5.prev = 24;\n\n              if (!_didIteratorError) {\n                _context5.next = 27;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 27:\n              return _context5.finish(24);\n\n            case 28:\n              return _context5.finish(19);\n\n            case 29:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n    }))();\n  } // AsyncIterable<?>\n\n\n  if (input[Symbol.asyncIterator]) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n      var iterator, first, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, obj;\n\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              iterator = input[Symbol.asyncIterator]();\n              _context7.next = 3;\n              return _awaitAsyncGenerator(iterator.next());\n\n            case 3:\n              first = _context7.sent;\n\n              if (!first.done) {\n                _context7.next = 6;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", iterator);\n\n            case 6:\n              if (!isBytes(first.value)) {\n                _context7.next = 10;\n                break;\n              }\n\n              _context7.next = 9;\n              return toFileObject(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n                return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        _context6.next = 2;\n                        return first.value;\n\n                      case 2:\n                        return _context6.delegateYield(_asyncGeneratorDelegate(_asyncIterator(iterator), _awaitAsyncGenerator), \"t0\", 3);\n\n                      case 3:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }))());\n\n            case 9:\n              return _context7.abrupt(\"return\");\n\n            case 10:\n              if (!(isFileObject(first.value) || isBloby(first.value) || typeof first.value === 'string')) {\n                _context7.next = 43;\n                break;\n              }\n\n              _context7.next = 13;\n              return toFileObject(first.value);\n\n            case 13:\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context7.prev = 15;\n              _iterator2 = _asyncIterator(iterator);\n\n            case 17:\n              _context7.next = 19;\n              return _awaitAsyncGenerator(_iterator2.next());\n\n            case 19:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context7.sent).done)) {\n                _context7.next = 26;\n                break;\n              }\n\n              obj = _step2.value;\n              _context7.next = 23;\n              return toFileObject(obj);\n\n            case 23:\n              _iteratorAbruptCompletion2 = false;\n              _context7.next = 17;\n              break;\n\n            case 26:\n              _context7.next = 32;\n              break;\n\n            case 28:\n              _context7.prev = 28;\n              _context7.t0 = _context7[\"catch\"](15);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context7.t0;\n\n            case 32:\n              _context7.prev = 32;\n              _context7.prev = 33;\n\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context7.next = 37;\n                break;\n              }\n\n              _context7.next = 37;\n              return _awaitAsyncGenerator(_iterator2.return());\n\n            case 37:\n              _context7.prev = 37;\n\n              if (!_didIteratorError2) {\n                _context7.next = 40;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 40:\n              return _context7.finish(37);\n\n            case 41:\n              return _context7.finish(32);\n\n            case 42:\n              return _context7.abrupt(\"return\");\n\n            case 43:\n              throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n\n            case 44:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[15, 28, 32, 42], [33,, 37, 41]]);\n    }))();\n  } // { path, content: ? }\n  // Note: Detected _after_ AsyncIterable<?> because Node.js streams have a\n  // `path` property that passes this check.\n\n\n  if (isFileObject(input)) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return toFileObject(input);\n\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n};\n\nfunction toFileObject(input) {\n  var obj = {\n    path: input.path || '',\n    mode: input.mode,\n    mtime: input.mtime\n  };\n\n  if (input.content) {\n    obj.content = toAsyncIterable(input.content);\n  } else if (!input.path) {\n    // Not already a file object with path or content prop\n    obj.content = toAsyncIterable(input);\n  }\n\n  return obj;\n}\n\nfunction toAsyncIterable(input) {\n  // Bytes | String\n  if (isBytes(input) || typeof input === 'string') {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return toBuffer(input);\n\n            case 2:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }))();\n  } // Bloby\n\n\n  if (isBloby(input)) {\n    return blobToAsyncGenerator(input);\n  } // Browser stream\n\n\n  if (typeof input.getReader === 'function') {\n    return browserStreamToIt(input);\n  } // Iterator<?>\n\n\n  if (input[Symbol.iterator]) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n      var iterator, first, _iterator5, _step5, chunk;\n\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              // eslint-disable-line require-await\n              iterator = input[Symbol.iterator]();\n              first = iterator.next();\n\n              if (!first.done) {\n                _context11.next = 4;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", iterator);\n\n            case 4:\n              if (!Number.isInteger(first.value)) {\n                _context11.next = 8;\n                break;\n              }\n\n              _context11.next = 7;\n              return toBuffer(Array.from( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n                return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return first.value;\n\n                      case 2:\n                        return _context10.delegateYield(iterator, \"t0\", 3);\n\n                      case 3:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10);\n              })()));\n\n            case 7:\n              return _context11.abrupt(\"return\");\n\n            case 8:\n              if (!isBytes(first.value)) {\n                _context11.next = 29;\n                break;\n              }\n\n              _context11.next = 11;\n              return toBuffer(first.value);\n\n            case 11:\n              _iterator5 = _createForOfIteratorHelper(iterator);\n              _context11.prev = 12;\n\n              _iterator5.s();\n\n            case 14:\n              if ((_step5 = _iterator5.n()).done) {\n                _context11.next = 20;\n                break;\n              }\n\n              chunk = _step5.value;\n              _context11.next = 18;\n              return toBuffer(chunk);\n\n            case 18:\n              _context11.next = 14;\n              break;\n\n            case 20:\n              _context11.next = 25;\n              break;\n\n            case 22:\n              _context11.prev = 22;\n              _context11.t0 = _context11[\"catch\"](12);\n\n              _iterator5.e(_context11.t0);\n\n            case 25:\n              _context11.prev = 25;\n\n              _iterator5.f();\n\n              return _context11.finish(25);\n\n            case 28:\n              return _context11.abrupt(\"return\");\n\n            case 29:\n              throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n\n            case 30:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[12, 22, 25, 28]]);\n    }))();\n  } // AsyncIterable<Bytes>\n\n\n  if (input[Symbol.asyncIterator]) {\n    return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n      var _iteratorAbruptCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, chunk;\n\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _iteratorAbruptCompletion3 = false;\n              _didIteratorError3 = false;\n              _context12.prev = 2;\n              _iterator3 = _asyncIterator(input);\n\n            case 4:\n              _context12.next = 6;\n              return _awaitAsyncGenerator(_iterator3.next());\n\n            case 6:\n              if (!(_iteratorAbruptCompletion3 = !(_step3 = _context12.sent).done)) {\n                _context12.next = 13;\n                break;\n              }\n\n              chunk = _step3.value;\n              _context12.next = 10;\n              return toBuffer(chunk);\n\n            case 10:\n              _iteratorAbruptCompletion3 = false;\n              _context12.next = 4;\n              break;\n\n            case 13:\n              _context12.next = 19;\n              break;\n\n            case 15:\n              _context12.prev = 15;\n              _context12.t0 = _context12[\"catch\"](2);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context12.t0;\n\n            case 19:\n              _context12.prev = 19;\n              _context12.prev = 20;\n\n              if (!(_iteratorAbruptCompletion3 && _iterator3.return != null)) {\n                _context12.next = 24;\n                break;\n              }\n\n              _context12.next = 24;\n              return _awaitAsyncGenerator(_iterator3.return());\n\n            case 24:\n              _context12.prev = 24;\n\n              if (!_didIteratorError3) {\n                _context12.next = 27;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 27:\n              return _context12.finish(24);\n\n            case 28:\n              return _context12.finish(19);\n\n            case 29:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 15, 19, 29], [20,, 24, 28]]);\n    }))();\n  }\n\n  throw errCode(new Error(\"Unexpected input: \".concat(input), 'ERR_UNEXPECTED_INPUT'));\n}\n\nfunction toBuffer(chunk) {\n  return isBytes(chunk) ? chunk : Buffer.from(chunk);\n}\n\nfunction isBytes(obj) {\n  return Buffer.isBuffer(obj) || ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\n\nfunction isBloby(obj) {\n  return typeof globalThis.Blob !== 'undefined' && obj instanceof globalThis.Blob;\n} // An object with a path or content property\n\n\nfunction isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\n\nfunction blobToAsyncGenerator(blob) {\n  if (typeof blob.stream === 'function') {\n    // firefox < 69 does not support blob.stream()\n    return browserStreamToIt(blob.stream());\n  }\n\n  return readBlob(blob);\n}\n\nfunction browserStreamToIt(_x) {\n  return _browserStreamToIt.apply(this, arguments);\n}\n\nfunction _browserStreamToIt() {\n  _browserStreamToIt = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(stream) {\n    var reader, result;\n    return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            reader = stream.getReader();\n\n          case 1:\n            if (!true) {\n              _context13.next = 11;\n              break;\n            }\n\n            _context13.next = 4;\n            return _awaitAsyncGenerator(reader.read());\n\n          case 4:\n            result = _context13.sent;\n\n            if (!result.done) {\n              _context13.next = 7;\n              break;\n            }\n\n            return _context13.abrupt(\"return\");\n\n          case 7:\n            _context13.next = 9;\n            return result.value;\n\n          case 9:\n            _context13.next = 1;\n            break;\n\n          case 11:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _browserStreamToIt.apply(this, arguments);\n}\n\nfunction readBlob(_x2, _x3) {\n  return _readBlob.apply(this, arguments);\n}\n\nfunction _readBlob() {\n  _readBlob = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(blob, options) {\n    var reader, chunkSize, offset, getNextChunk, data;\n    return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            options = options || {};\n            reader = new globalThis.FileReader();\n            chunkSize = options.chunkSize || 1024 * 1024;\n            offset = options.offset || 0;\n\n            getNextChunk = function getNextChunk() {\n              return new Promise(function (resolve, reject) {\n                reader.onloadend = function (e) {\n                  var data = e.target.result;\n                  resolve(data.byteLength === 0 ? null : data);\n                };\n\n                reader.onerror = reject;\n                var end = offset + chunkSize;\n                var slice = blob.slice(offset, end);\n                reader.readAsArrayBuffer(slice);\n                offset = end;\n              });\n            };\n\n          case 5:\n            if (!true) {\n              _context14.next = 15;\n              break;\n            }\n\n            _context14.next = 8;\n            return _awaitAsyncGenerator(getNextChunk());\n\n          case 8:\n            data = _context14.sent;\n\n            if (!(data == null)) {\n              _context14.next = 11;\n              break;\n            }\n\n            return _context14.abrupt(\"return\");\n\n          case 11:\n            _context14.next = 13;\n            return Buffer.from(data);\n\n          case 13:\n            _context14.next = 5;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _readBlob.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"script"}